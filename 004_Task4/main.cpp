#include <iostream>
#include <fstream>
#include <string>

/*
 - Разработайте программу, которая получает на вход, в стандартный ввод, путь к файлу.
 На выходе программа должна определить, является ли данный файл PNG-изображением.
 Данная процедура не просто должна смотреть на расширение файла, но и произвести минимальный анализ его внутренностей,
 в бинарном режиме.
 - Внутренности валидного бинарного файла начинаются со специального 8-байтового заголовка.
 Нас будут интересовать первые четыре байта. Первый байт всегда имеет значение −119 (число со знаком минус),
 а следующие — это просто символы ‘P’, ‘N’, ‘G’, расположенные друг за другом. Обратите внимание, что все они в верхнем регистре.
 - По результатам проверки пути и внутренностей требуется сообщить пользователю о результате проверки в стандартный вывод.
Советы и рекомендации
 Чтобы определить расширение файла, используйте функцию substr, которая получает офсет и длину подстроки и возвращает её.
 */

int main() {
    std::ifstream file;
    std::string path;

    std::cout << "Input file path:" << std::endl;
    std::cin >> path;
    file.open(path, std::ios::binary);

    if (!file.is_open()) {
        std::cout << "Wrong file path" << std::endl;
    } else {
        std::string text = path.substr(path.length() - 4,4);
        if (text != ".png") {
            std::cout << "Wrong file extension" << std::endl;
        } else {
            char buffer[4];
            file.read(buffer, 4);
            if (buffer[0] != -119 || buffer[1] != 'P' || buffer[2] != 'N' || buffer[3] != 'G') {
                std::cout << "Not PNG file" << std::endl;
            } else {
                std::cout << "PNG file" << std::endl;
            }
        }
    }
    file.close();
}